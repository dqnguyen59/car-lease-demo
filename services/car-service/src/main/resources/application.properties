########################################################################################################################
##### LOGGING ##########################################################################################################

logging.level.root=INFO
logging.level.com.test=DEBUG
spring.main.banner-mode=off 
spring.output.ansi.enabled=ALWAYS
logging.pattern.console=%clr(%d{yy-MM-dd E HH:mm:ss.SSS}){blue} %clr(%-5p) %clr(${PID}){faint} %clr(---){faint} %clr([%8.15t]){cyan} %clr(%-40.40logger{0}){blue} %clr(:){red} %clr(%m){faint}%n

#logging.level.org.hibernate.SQL=INFO
#logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

##### LOGGING ##########################################################################################################
########################################################################################################################

########################################################################################################################
##### ERROR MESSAGES ###################################################################################################

# Always show custom message of ResponseStatusException 
server.error.include-message=always
server.error.include-stacktrace=never

##### ERROR MESSAGES ###################################################################################################
########################################################################################################################


########################################################################################################################
##### EUREKA-CLIENT ####################################################################################################

server.port=7000
eureka.instance.hostname=localhost
eureka.client.register-with-eureka=true 
eureka.client.fetch-registry=true
eureka.client.serviceUrl.defaultZone=http://root:secret@localhost:8761/eureka
spring.application.name=car-service

##### EUREKA-CLIENT ####################################################################################################
########################################################################################################################

########################################################################################################################
##### GATEWAY-AUTHENTICATION ###########################################################################################

carlease.gateway.protocol=http
carlease.gateway.host=localhost
carlease.gateway.port=9000
carlease.gateway.endpoint=/api/v1/auth/validateToken/{token}

##### GATEWAY-AUTHENTICATION ###########################################################################################
########################################################################################################################

########################################################################################################################
##### HIBERNATE ########################################################################################################

# https://docs.spring.io/spring-boot/docs/1.1.0.M1/reference/html/howto-database-initialization.html

# Use create when the database is empty
#spring.jpa.hibernate.ddl-auto=create

# Use create-drop when you want to drop and create a new the database
# spring.jpa.hibernate.ddl-auto=create-drop

# Use update when models are changed and updates the database dynamically
# If database is empty, then it also creates the tables.
spring.jpa.hibernate.ddl-auto=update

#spring.jpa.properties.hibernate.format_sql=true
#spring.jpa.properties.hibernate.validator.apply_to_ddl=false
#spring.jpa.properties.hibernate.globally_quoted_identifiers=true
## spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
#spring.jpa.defer-datasource-initialization=true

#spring.jpa.open-in-view=false
#spring.jpa.show-sql=false
#spring.jpa.properties.hibernate.format_sql=true
#spring.jpa.properties.hibernate.generate_statistics=true

#hibernate.physical_naming_strategy=com.vladmihalcea.hibernate.type.util.CamelCaseToSnakeCaseNamingStrategy
#spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
#spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
#spring.jpa.properties.hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy
#spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
#spring.jpa.hibernate.naming.physical-strategy=com.vladmihalcea.hibernate.type.util.CamelCaseToSnakeCaseNamingStrategy

##### HIBERNATE ########################################################################################################
########################################################################################################################


########################################################################################################################
##### H2DATABASE #######################################################################################################

# Uncomment to use H2Database

#H2Database
#spring.h2.console.enabled=true
#spring.h2.console.path=/h2-console
#spring.h2.console.settings.trace=false
#spring.h2.console.settings.web-allow-others=true
##spring.datasource.url=jdbc:h2:file:/data/demo
#spring.datasource.url=jdbc:h2:mem:testdb
#spring.datasource.driverClassName=org.h2.Driver
#spring.datasource.username=sa
#spring.datasource.password=
#spring.jpa.defer-datasource-initialization=true

##### H2DATABASE #######################################################################################################
########################################################################################################################


########################################################################################################################
##### MYSQL DATABASE ###################################################################################################

# Uncomment to use MySQL Database

spring.datasource.url=jdbc:mysql://localhost:3306/CARLEASE?createDatabaseIfNotExist=true&allowPublicKeyRetrieval=true&useSSL=true
spring.datasource.username=root
spring.datasource.password=super
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
# Show or hide hibernate sql log
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=true

##### MYSQL DATABASE ###################################################################################################
########################################################################################################################


########################################################################################################################
##### JSON WEB TOKEN ###################################################################################################

# Generate a key here: https://www.devglan.com/online-tools/hmac-sha256-online?ref=blog.tericcabrel.com
# Plain text: Smartblackbox Springboot Demo
# Secret key: Springboot Demo
security.jwt.secret-key=a8eb0c598fd3b526714e8f615041eaa67de28953a041bf87dc6398458503db46
# 1h in millisecond
security.jwt.expiration-time=3600000

##### JSON WEB TOKEN ###################################################################################################
########################################################################################################################


########################################################################################################################
##### SWAGGER-UI #######################################################################################################

#management.endpoints.web.exposure.include=openapi, swagger-ui
#management.server.port=9090

#https://springdoc.org/faq.html

# Paths to include
springdoc.pathsToMatch=/api, /api/v1/**

# swagger-ui custom path
springdoc.default-produces-media-type=application/json
springdoc.api-docs.path=/api-docs
springdoc.show-actuator=true
# Disabling the /v3/api-docs endpoint
# springdoc.api-docs.enabled=false
# Disabling the swagger-ui
# springdoc.swagger-ui.enabled=false
springdoc.swagger-ui.path=/swagger-ui.html
#For sorting endpoints alphabetically
springdoc.swagger-ui.operationsSorter=alpha
#For sorting tags alphabetically
springdoc.swagger-ui.tagsSorter=alpha
#springdoc.swagger-ui.doc-expansion=none
springdoc.swagger-ui.defaultModelsExpandDepth=10
springdoc.swagger-ui.defaultModelExpandDepth=10

#-----------------------------------------------------------------------------------------------------------------------
# To print the Swagger-UI as PDF file, follow the procedure below:
#springdoc.swagger-ui.docExpansion=full
#
# To expand all models, open console on the browser and past the code below:
#  (() => {
#    const i = setInterval(() => {
#      [...document.querySelectorAll('[aria-expanded="false"]')].map((el) =>
#        el.click()
#      ).length || clearInterval(i);
#    }, 1000);
#  })();
#
# The print to PDF file
#-----------------------------------------------------------------------------------------------------------------------

##### SWAGGER-UI #######################################################################################################
########################################################################################################################

